# Step 1/1

## Request

```http_gql
fetch("https://backboard.railway.com/graphql/internal?q=projectCreate"
  "body": "{\"query\":\"mutation projectCreate($input: ProjectCreateInput!) {\\n  projectCreate(input: $input) {\\n    ...ProjectFields\\n  }\\n}\\n\\nfragment ProjectFields on Project {\\n  id\\n  name\\n  description\\n  createdAt\\n  updatedAt\\n  expiredAt\\n  deletedAt\\n  prDeploys\\n  botPrEnvironments\\n  isTempProject\\n  isPublic\\n  subscriptionType\\n  subscriptionPlanLimit\\n  teamId\\n  baseEnvironmentId\\n  projectPermissions {\\n    edges {\\n      node {\\n        ...ProjectPermissionFields\\n      }\\n    }\\n  }\\n  plugins {\\n    edges {\\n      node {\\n        ...PluginFields\\n      }\\n    }\\n  }\\n  environments {\\n    edges {\\n      node {\\n        ...EnvironmentFields\\n      }\\n    }\\n  }\\n  services {\\n    edges {\\n      node {\\n        ...ServiceFields\\n      }\\n    }\\n  }\\n  volumes {\\n    edges {\\n      node {\\n        ...VolumeFields\\n      }\\n    }\\n  }\\n}\\n\\nfragment ProjectPermissionFields on ProjectPermission {\\n  role\\n  userId\\n  projectId\\n}\\n\\nfragment PluginFields on Plugin {\\n  id\\n  name\\n  friendlyName\\n  status\\n  deprecatedAt\\n  createdAt\\n  logsEnabled\\n  containers {\\n    edges {\\n      node {\\n        ...ContainerFields\\n      }\\n    }\\n  }\\n}\\n\\nfragment ContainerFields on Container {\\n  environmentId\\n  pluginId\\n  deletedAt\\n}\\n\\nfragment EnvironmentFields on Environment {\\n  id\\n  name\\n  projectId\\n  createdAt\\n  isEphemeral\\n  meta {\\n    prNumber\\n    prTitle\\n    prRepo\\n    branch\\n    baseBranch\\n  }\\n}\\n\\nfragment ServiceFields on Service {\\n  id\\n  name\\n  icon\\n  templateServiceId\\n  createdAt\\n  projectId\\n  featureFlags\\n  templateThreadSlug\\n}\\n\\nfragment VolumeFields on Volume {\\n  id\\n  createdAt\\n  name\\n  projectId\\n}\",\"variables\":{\"input\":{\"teamId\":\"a6139a3e-f455-4860-b2ac-759a243ecc66\",\"reason\":\"prompt-cli\"}},\"operationName\":\"projectCreate\"}",
  "method": "POST"
});
```

## Response

```json
{"data":{"projectCreate":{"id":"1d57637a-cbbe-458b-8588-02137e2fccf4","name":"chic-healing","description":null,"createdAt":"2025-06-03T16:31:43.108Z","updatedAt":"2025-06-03T16:31:43.108Z","expiredAt":null,"deletedAt":null,"prDeploys":false,"botPrEnvironments":false,"isTempProject":false,"isPublic":false,"subscriptionType":"trial","subscriptionPlanLimit":{"includedUsageDollars":5,"projects":5,"project":{"members":3,"services":5},"volumes":{"defaultSizeMB":500,"maxSizeMB":500,"maxPerProject":3},"containers":{"cpu":2,"cpuDescription":"2 vCPU","memoryBytes":512000000,"memoryDescription":"512 MB","diskBytes":1000000000,"diskDescription":"1 GB","maxRestartPolicyRetries":10},"builds":{"concurrent":3,"timeout":{"soft":10,"hard":20},"maxImageSizeBytes":4000000000},"deploys":{"replicas":2},"observability":{"logRetentionDays":7},"networking":{"customDomains":1,"serviceDomains":2}},"teamId":"a6139a3e-f455-4860-b2ac-759a243ecc66","baseEnvironmentId":null,"projectPermissions":{"edges":[]},"plugins":{"edges":[]},"environments":{"edges":[{"node":{"id":"69b495c6-82bd-4d07-b53f-eb1fee15b870","name":"production","projectId":"1d57637a-cbbe-458b-8588-02137e2fccf4","createdAt":"2025-06-03T16:31:43.518Z","isEphemeral":false,"meta":null}}]},"services":{"edges":[]},"volumes":{"edges":[]}}}}
```